Захват параметра функции paramName :
1. Добавить в класс-итератор как служебное поле <num>__paramName

Выполняет роль закэшированного начального значения параметра, если функция-итератор вызывается в нескольких местах.
В классе-итераторе в IEnumerable<T>.GetEnumerator при создании возможно нового класса-итератора для другого потока:
	1.1. Захватить в поле нового класса-итератора paramName кэшированное значение self.<num>__paramName

В новом теле функции-итератора:
	1.1. Создаем класс-хелпер (собственно итератор)
	1.2. Захват <num>__paramName = paramName
	1.3. Возвращаем класс-хелпер

2. Добавить в класс-итератор как служебное поле paramName

Используется собственно как параметр функции-итератора.

3. Заменить в теле функции-итератора использование параметра функции paramName -> self.paramName,
  	 где self - класса-хелпера



Захват поля класса fieldName

1. Добавить в класс-итератор как служебное поле <num>__self,
     где self - класс содержащий функцию-итератор

В классе-итераторе в IEnumerable<T>.GetEnumerator при создании возможно нового класса-итератора для другого потока:
	1.1. Захватить в поле нового класса-итератора значение self.<num>__self от исходного класса с функцией-итератором

В теле функции-итератора захватить self содержающего итератор класса
	1.1. Создаем класс-хелпер (собственно итератор)
	1.2. Захват <num>__self = self;
	1.3. Возвращаем класс-хелпер

2. Заменить в теле функции-итератора использования поля класса fieldName -> self.<num>__self.fieldName,
	где self - класса-хелпера